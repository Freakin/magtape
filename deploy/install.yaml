apiVersion: v1
kind: Namespace
metadata:
  name: magtape-system

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: magtape-write
  labels:
    app: magtape
rules:
- apiGroups:
  - admissionregistration.k8s.io
  - certificates.k8s.io
  - events.k8s.io
  - ""
  resources:
    - validatingwebhookconfigurations
    - certificatesigningrequests
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    - events
    - signers
  verbs:
    - get
    - list
    - watch
    - create
    - patch
    - update
    - delete
    - approve

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: magtape-read
  labels:
    app: magtape
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - services
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  - daemonsets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: magtape-write-crb
  labels:
    app: magtape
roleRef:
  kind: ClusterRole
  name: magtape-write
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: magtape-sa
  namespace: magtape-system

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: magtape-read-crb
  labels:
    app: magtape
roleRef:
  kind: ClusterRole
  name: magtape-read
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: magtape-sa
  namespace: magtape-system
---
# Define role for OPA/kube-mgmt to update configmaps with policy status.
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: magtape-ops
  namespace: magtape-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - patch
  - update

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: magtape-ops-rb
  namespace: magtape-system
roleRef:
  kind: Role
  name: magtape-ops
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: magtape-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: magtape-sa
  namespace: magtape-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: magtape-env
  namespace: magtape-system
data:
  FLASK_ENV: "production"
  PYTHONUNBUFFERED: "TRUE"
  MAGTAPE_CLUSTER_NAME: "test-cluster"
  MAGTAPE_LOG_LEVEL: "INFO"
  MAGTAPE_DENY_LEVEL: "LOW"
  MAGTAPE_K8S_EVENTS_ENABLED: "TRUE"
  MAGTAPE_SLACK_ENABLED: "FALSE"
  MAGTAPE_SLACK_PASSIVE: "FALSE"
  MAGTAPE_SLACK_WEBHOOK_URL_DEFAULT: "https://hooks.slack.com/services/XXXXXXXX/XXXXXXXX/XXXXXXXXXXXXXXXXXX"
  MAGTAPE_SLACK_ANNOTATION: "magtape/slack-webhook-url"
  MAGTAPE_SLACK_USER: "mtbot"
  MAGTAPE_SLACK_ICON: ":magtape:"
  OPA_BASE_URL: "http://127.0.0.1:8181"
  OPA_K8S_PATH: "/v0/data/magtape"
---

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: magtape-opa-default-main
  namespace: magtape-system
data:
  main: |
    package system

    import data.kubernetes.admission

    main = {
      "apiVersion": "admission.k8s.io/v1beta1",
      "kind": "AdmissionReview",
      "response": response,
    }

    default response = {"allowed": true}

    response = {
        "allowed": false,
        "status": {
            "reason": reason,
        },
    } {
        reason = concat(", ", admission.deny)
        reason != ""
    }
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: magtape-opa-entrypoint
  namespace: magtape-system
  labels:
    app: opa
    openpolicyagent.org/policy: rego

data:
  magtape.rego: |-
    package magtape

    # This acts as an entrypoint to call all policies under "kubernetes.admission"

    decisions[{"policy": p, "reasons": reasons}] {

      data.kubernetes.admission[p].matches
      reasons := data.kubernetes.admission[p].deny

    }

---
apiVersion: v1
kind: Service
metadata:
  name: magtape-svc
  labels:
    app: magtape
  namespace: magtape-system
spec:
  ports:
  - name: https
    port: 443
    targetPort: 5000
  selector:
    app: magtape
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: magtape-pdb
  namespace: magtape-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: magtape
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: magtape
  namespace: magtape-system
  labels:
    app: magtape
spec:
  replicas: 3
  selector:
    matchLabels:
      app: magtape
  template:
    metadata:
      labels:
        app: magtape
    spec:
      serviceAccountName: magtape-sa
      initContainers:
        - name: magtape-init
          image: tmobile/magtape-init:v2.1.4
          command: [/app/magtape-init.py]
          imagePullPolicy: Always
          env:
          - name: MAGTAPE_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MAGTAPE_NAMESPACE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: magtape-env
          volumeMounts:
          - name: magtape-tls
            mountPath: /tls
          - name: magtape-vwc
            mountPath: /vwc
      containers:
      - name: magtape
        image: tmobile/magtape:v2.1.4
        ports:
        - containerPort: 5000
        command: ["gunicorn", "magtape:app", "--config=config.py"]
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            scheme: HTTPS
            port: 5000
            path: /healthz
          initialDelaySeconds: 3
          periodSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTPS
            port: 5000
            path: /healthz
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 128Mi
        env:
        - name: MAGTAPE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MAGTAPE_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: magtape-env
        volumeMounts:
          - name: magtape-tls
            mountPath: /tls
      - name: opa
        image: openpolicyagent/opa:0.19.2
        args:
          - "run"
          - "--server"
          - "--tls-cert-file=/tls/cert.pem"
          - "--tls-private-key-file=/tls/key.pem"
          - "--addr=0.0.0.0:443"
          - "--addr=http://127.0.0.1:8181"
        readinessProbe:
          httpGet:
            scheme: HTTPS
            port: 443
            path: /health
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            scheme: HTTPS
            port: 443
            path: /health
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          limits:
            cpu: "500m"
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
          - name: magtape-tls
            mountPath: /tls
      - name: kube-mgmt
        image: openpolicyagent/kube-mgmt:0.11
        args:
          - "--policies=magtape-system"
          - "--require-policy-label=true"
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 128Mi
      volumes:
        - name: magtape-vwc
          configMap:
              name: magtape-vwc-template
              items:
              - key: magtape-vwc
                path: magtape-vwc.yaml
        - name: magtape-tls
          emptyDir: {}
      terminationGracePeriodSeconds: 5

---

---

---

